//font-face
//e.g ) @include font-face("MyFont", "path/to/MyFont", $style: normal, $weight: normal);
@mixin font-face($font-name, $file-name, $weight: normal, $style: normal) {
	@font-face {
		font-family: quote($font-name);
		//src: url($file-name + ".eot");
		src: 
			//url($file-name + ".eot?#iefix") format("embedded-opentype"),
			url($file-name + ".woff") format("woff"),
			url($file-name + ".woff2") format("woff2");
		//url($file-name + ".ttf") format("truetype"),
		//url($file-name + ".svg##{$font-name}") format("svg");
		font-weight: $weight;
		font-style: $style;
	}
}

@mixin pseudo($display: block, $pos: absolute, $content: "") {
	content: $content;
	display: $display;
	position: $pos;
}

//centering items
@mixin push--auto {
	margin: {
		left: auto;
		right: auto;
	}
}

//centering items
//e.g) .box { @include push--center; }
@mixin push--center {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

@mixin responsive-ratio($x, $y, $pseudo: false) {
	$padding: unquote(($y / $x) * 100 + "%");

	@if $pseudo {
		&:before {
			@include pseudo($pos: relative);
			width: 100%;
			padding-top: $padding;
		}
	} @else {
		padding-top: $padding;
	}
}

@mixin ellipsis($truncation-boundary) {
	max-width: $truncation-boundary;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

//clearfix
//e.g ) .eg { @include clearfix; }
@mixin clearfix {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}

//e.g

//div.logo {
//	background: url("logo.png") no-repeat;
//	@include retina("logo2x.png", 100px, 25px);
//}

@mixin retina($image, $width: auto, $height: auto) {
	@media (min--moz-device-pixel-ratio: 1.3),
		(-o-min-device-pixel-ratio: 2.6/2),
		(-webkit-min-device-pixel-ratio: 1.3),
		(min-device-pixel-ratio: 1.3),
		(min-resolution: 1.3dppx) {
		/* on retina, use image that's scaled by 2 */
		background-image: url($image);
		background-size: $width $height;
	}
}

//gradient
//e.g ) .gradient {   @include gradient(#07c, #06f, vertical); }
@mixin gradient($start-color, $end-color, $orientation) {
	background: $start-color;
	@if $orientation == "vertical" {
		background: -webkit-linear-gradient(top, $start-color, $end-color);
		background: linear-gradient(to bottom, $start-color, $end-color);
	} @else if $orientation == "horizontal" {
		background: -webkit-linear-gradient(left, $start-color, $end-color);
		background: linear-gradient(to right, $start-color, $end-color);
	} @else {
		background: -webkit-radial-gradient(
			center,
			ellipse cover,
			$start-color,
			$end-color
		);
		background: radial-gradient(ellipse at center, $start-color, $end-color);
	}
}
$breakpoints: (
	"phone": 360px,
	"phone-mid": 414px,
	"phone-wide": 480px,
	"phablet": 560px,
	"tablet-small": 640px,
	"tablet": 768px,
	"tablet2": 830px,
	"tablet-wide": 1024px,
	//custom break points
	"contents": 1200px,
	"type14": 1440px,
);

@mixin mq($width, $type: max) {
	@if map_has_key($breakpoints, $width) {
		$width: map_get($breakpoints, $width);

		@if $type==max {
			$width: $width;
		}

		@media screen and (#{$type}-width: $width) {
			@content;
		}
	}
}

@mixin bgProperty($bgUrl, $posX, $posY) {
	background-repeat: no-repeat;
	background-size: cover;
	background-position: $posX $posY;
	background-image: url($bgUrl);
}

$color-primary: #0062b4;
$color-secondary: #f96900;
$color-black: #222;
$color-blue: #133f8f;
$color-light-blue: #0094d9;
$color-red: #ff1f39;
$color-txt: #666666;
$color-green: #39ab44;

@mixin icon-font { 
	font-family: 'icomoon' !important;
	speak: never;
	font-style: normal;
	font-weight: normal;
	font-variant: normal;
	text-transform: none;
	line-height: 1;
}

.col-black {
	color: $color-black;
}

.col-red {
	color: #e60000 !important;
}

.col-lightblue {
	color: $color-light-blue;
}

